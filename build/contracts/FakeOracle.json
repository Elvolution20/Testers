{
  "contractName": "FakeOracle",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StaleChainlinkPrice",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BUSD",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BUSDT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "base",
          "type": "address"
        }
      ],
      "name": "getTokenUsdPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BadPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StaleChainlinkPrice\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BUSDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"}],\"name\":\"getTokenUsdPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTokenUsdPrice(address)\":{\"notice\":\"Returns the latest token / usd price and its decimals\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/oracles/FakeOracle.sol\":\"FakeOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/Denominations.sol\":{\"keccak256\":\"0xee406990d671c95993762c3ee15c77987ee35c3682357c419ff73747a728fc4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cacf9bf3ceca86053bfb23b12c42bfa7a3e28f2e7c548388cb6ceb372357bdc2\",\"dweb:/ipfs/QmcgE9akf5P6vjUpe9Kz3zANFSpbQsm9HM8RyXv1TLsRSP\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xb496651006b9a2a07920ffe116928b11e2a6458e21361cecca51409522488ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39ad60071af2c115e064ebeb1686097efa83b26da0e2c814c635538538b7465\",\"dweb:/ipfs/QmYRARVDA1XZUqZNKNnArYHWbffNeeSVZQjt67ZXKGm85a\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0x4a7757ff7bbafe044cd49c2a45c7c18ec50eff7c7af6869face5e1e9cda976f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c3f481f69f3ee07d6bb91b38d1cd61f9fa72de29c63d778c98956db70ecd57b\",\"dweb:/ipfs/QmPeJrNHTZF8CrXk3BgLJCamwf1dUEzHyQsMYrdd4v1NEG\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol\":{\"keccak256\":\"0xa783cf3434bd5b5153fe876c37d5d5cb78d4e198f01f184b60ed3392401ddc0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da43a873796a596da88cc1fbe684de3551ac99d4647e609b350cba5dc3258162\",\"dweb:/ipfs/QmVLiPnirG8rpVdxcMkoFZSrFoqTcye6Z9C6RjzcBUKzBu\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/interfaces/IUsdOracle.sol\":{\"keccak256\":\"0xe93076c75786c51180946175e7257eb4126c53645f110fc3a47d0639a653928a\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://38ef90584e16b61575c1ef658fb3252c40355fdb0eb733d6a91a85d6a21aedec\",\"dweb:/ipfs/QmRzHnmYsUNXjWQHVGsSHrMRPf6Wku2cfPM6otQXEGt2ek\"]},\"project:/contracts/oracles/FakeOracle.sol\":{\"keccak256\":\"0x54ae31e2800064ae1f84cf1f14b65ae1ebcdde4f0e2e7bbf5d7e3f58a108ba65\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://16557692e6e7398c64f701e7931fec3ee50be923e2479b2f0812fbb0b6e136b2\",\"dweb:/ipfs/QmYoo9MFvcL84ndTY4yotZwtHmQ8AAnQb7wuz98C6xjSTg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d6100226101ed60201b60201c565b6101f560201b60201c565b60405180604001604052806305f767a08152602001600860ff1681525060016000738ac76a51cc950d9822d68b83fe1ad97b32cd580d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061034873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360ff16021790555090505060405180604001604052806402540be4008152602001600a60ff168152506001600073e9e7cea3dedca5984780bafc599bd69add087d5673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061034873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360ff1602179055509050506102b9565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61097e806102c86000396000f3fe608060405234801561001057600080fd5b50600436106100915760003560e01c806389a302711161006657806389a302711461010b5780638da5cb5b14610129578063a624cdbe14610147578063e0bab4c414610165578063f2fde38b1461018357610091565b8062593bcf14610096578062e4768b146100c7578063484f4ea9146100e3578063715018a614610101575b600080fd5b6100b060048036038101906100ab91906106bf565b61019f565b6040516100be929190610721565b60405180910390f35b6100e160048036038101906100dc9190610776565b6102bc565b005b6100eb6103f2565b6040516100f891906107c5565b60405180910390f35b61010961040a565b005b61011361041e565b60405161012091906107c5565b60405180910390f35b610131610436565b60405161013e91906107c5565b60405180910390f35b61014f61045f565b60405161015c91906107c5565b60405180910390f35b61016d610477565b60405161017a91906107c5565b60405180910390f35b61019d600480360381019061019891906106bf565b61048f565b005b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061034873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549150600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061034873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff169050915091565b60405180604001604052808281526020018373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c919061080c565b60ff16815250600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061034873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360ff1602179055509050505050565b73e9e7cea3dedca5984780bafc599bd69add087d5681565b610412610512565b61041c6000610590565b565b738ac76a51cc950d9822d68b83fe1ad97b32cd580d81565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7355d398326f99059ff775485246999027b319795581565b731af3f329e8be154074d8769d1ffa4ee058b1dbc381565b610497610512565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd906108bc565b60405180910390fd5b61050f81610590565b50565b61051a610654565b73ffffffffffffffffffffffffffffffffffffffff16610538610436565b73ffffffffffffffffffffffffffffffffffffffff161461058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058590610928565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068c82610661565b9050919050565b61069c81610681565b81146106a757600080fd5b50565b6000813590506106b981610693565b92915050565b6000602082840312156106d5576106d461065c565b5b60006106e3848285016106aa565b91505092915050565b6000819050919050565b6106ff816106ec565b82525050565b600060ff82169050919050565b61071b81610705565b82525050565b600060408201905061073660008301856106f6565b6107436020830184610712565b9392505050565b610753816106ec565b811461075e57600080fd5b50565b6000813590506107708161074a565b92915050565b6000806040838503121561078d5761078c61065c565b5b600061079b858286016106aa565b92505060206107ac85828601610761565b9150509250929050565b6107bf81610681565b82525050565b60006020820190506107da60008301846107b6565b92915050565b6107e981610705565b81146107f457600080fd5b50565b600081519050610806816107e0565b92915050565b6000602082840312156108225761082161065c565b5b6000610830848285016107f7565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108a6602683610839565b91506108b18261084a565b604082019050919050565b600060208201905081810360008301526108d581610899565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610912602083610839565b915061091d826108dc565b602082019050919050565b6000602082019050818103600083015261094181610905565b905091905056fea2646970667358221220248f8d1f29776b1147fe054fad966ea71e02556eacb152ea4b5d30c1ad6561a464736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100915760003560e01c806389a302711161006657806389a302711461010b5780638da5cb5b14610129578063a624cdbe14610147578063e0bab4c414610165578063f2fde38b1461018357610091565b8062593bcf14610096578062e4768b146100c7578063484f4ea9146100e3578063715018a614610101575b600080fd5b6100b060048036038101906100ab91906106bf565b61019f565b6040516100be929190610721565b60405180910390f35b6100e160048036038101906100dc9190610776565b6102bc565b005b6100eb6103f2565b6040516100f891906107c5565b60405180910390f35b61010961040a565b005b61011361041e565b60405161012091906107c5565b60405180910390f35b610131610436565b60405161013e91906107c5565b60405180910390f35b61014f61045f565b60405161015c91906107c5565b60405180910390f35b61016d610477565b60405161017a91906107c5565b60405180910390f35b61019d600480360381019061019891906106bf565b61048f565b005b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061034873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549150600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061034873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff169050915091565b60405180604001604052808281526020018373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c919061080c565b60ff16815250600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061034873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360ff1602179055509050505050565b73e9e7cea3dedca5984780bafc599bd69add087d5681565b610412610512565b61041c6000610590565b565b738ac76a51cc950d9822d68b83fe1ad97b32cd580d81565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7355d398326f99059ff775485246999027b319795581565b731af3f329e8be154074d8769d1ffa4ee058b1dbc381565b610497610512565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd906108bc565b60405180910390fd5b61050f81610590565b50565b61051a610654565b73ffffffffffffffffffffffffffffffffffffffff16610538610436565b73ffffffffffffffffffffffffffffffffffffffff161461058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058590610928565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068c82610661565b9050919050565b61069c81610681565b81146106a757600080fd5b50565b6000813590506106b981610693565b92915050565b6000602082840312156106d5576106d461065c565b5b60006106e3848285016106aa565b91505092915050565b6000819050919050565b6106ff816106ec565b82525050565b600060ff82169050919050565b61071b81610705565b82525050565b600060408201905061073660008301856106f6565b6107436020830184610712565b9392505050565b610753816106ec565b811461075e57600080fd5b50565b6000813590506107708161074a565b92915050565b6000806040838503121561078d5761078c61065c565b5b600061079b858286016106aa565b92505060206107ac85828601610761565b9150509250929050565b6107bf81610681565b82525050565b60006020820190506107da60008301846107b6565b92915050565b6107e981610705565b81146107f457600080fd5b50565b600081519050610806816107e0565b92915050565b6000602082840312156108225761082161065c565b5b6000610830848285016107f7565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108a6602683610839565b91506108b18261084a565b604082019050919050565b600060208201905081810360008301526108d581610899565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610912602083610839565b915061091d826108dc565b602082019050919050565b6000602082019050818103600083015261094181610905565b905091905056fea2646970667358221220248f8d1f29776b1147fe054fad966ea71e02556eacb152ea4b5d30c1ad6561a464736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5835:78",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:78",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:78"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:78"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:78",
                "type": ""
              }
            ],
            "src": "7:75:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:78",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:78"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:78",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:78"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:78",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:78",
                "type": ""
              }
            ],
            "src": "334:126:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:78",
                "type": ""
              }
            ],
            "src": "466:96:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:78"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:78"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:78"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:78",
                "type": ""
              }
            ],
            "src": "568:122:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:78"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:78",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:78",
                "type": ""
              }
            ],
            "src": "696:139:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:78"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:78",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:78"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:78"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:78",
                "type": ""
              }
            ],
            "src": "841:329:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1221:32:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1231:16:78",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1242:5:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1231:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1203:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1213:7:78",
                "type": ""
              }
            ],
            "src": "1176:77:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:78"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:78"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:78",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:78",
                "type": ""
              }
            ],
            "src": "1259:118:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1426:43:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1436:27:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1451:5:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1458:4:78",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1447:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1447:16:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1436:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1408:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1418:7:78",
                "type": ""
              }
            ],
            "src": "1383:86:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1536:51:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1553:3:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1574:5:78"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1558:15:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1558:22:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1546:35:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1546:35:78"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1524:5:78",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1531:3:78",
                "type": ""
              }
            ],
            "src": "1475:112:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1715:202:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1725:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1737:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1748:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1733:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1725:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1805:6:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1818:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1829:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1814:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1814:17:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1761:43:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1761:71:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1761:71:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1882:6:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1842:39:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:68:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1842:68:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1679:9:78",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1691:6:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1699:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1710:4:78",
                "type": ""
              }
            ],
            "src": "1593:324:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1966:79:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2023:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2032:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2035:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2025:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2025:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2025:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1989:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2014:5:78"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1996:17:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1996:24:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1986:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1986:35:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1979:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1979:43:78"
                  },
                  "nodeType": "YulIf",
                  "src": "1976:63:78"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1959:5:78",
                "type": ""
              }
            ],
            "src": "1923:122:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2103:87:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2113:29:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2135:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2122:12:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2122:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2113:5:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2178:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2151:26:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2151:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2151:33:78"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2081:6:78",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2089:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2097:5:78",
                "type": ""
              }
            ],
            "src": "2051:139:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2279:391:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2325:83:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2327:77:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2327:79:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2327:79:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2300:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2309:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2296:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2296:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2321:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2292:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2292:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "2289:119:78"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2418:117:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2433:15:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2447:1:78",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2437:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2462:63:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2497:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2508:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2493:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2493:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2517:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2472:20:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2472:53:78"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2462:6:78"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2545:118:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2560:16:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2574:2:78",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2564:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2590:63:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2625:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2636:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2621:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2621:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2645:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2600:20:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2600:53:78"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2590:6:78"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2241:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2252:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2264:6:78",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2272:6:78",
                "type": ""
              }
            ],
            "src": "2196:474:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2741:53:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2758:3:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2781:5:78"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2763:17:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2763:24:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2751:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2751:37:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2751:37:78"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2729:5:78",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2736:3:78",
                "type": ""
              }
            ],
            "src": "2676:118:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2898:124:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2908:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2920:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2931:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2916:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2916:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2908:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2988:6:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3001:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3012:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2997:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2997:17:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2944:43:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2944:71:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2944:71:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2870:9:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2882:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2893:4:78",
                "type": ""
              }
            ],
            "src": "2800:222:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3069:77:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3124:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3133:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3136:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3126:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3126:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3126:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3092:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3115:5:78"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "3099:15:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3099:22:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3089:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3089:33:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3082:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3082:41:78"
                  },
                  "nodeType": "YulIf",
                  "src": "3079:61:78"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3062:5:78",
                "type": ""
              }
            ],
            "src": "3028:118:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3213:78:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3223:22:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3238:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3232:5:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3232:13:78"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3223:5:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3279:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "3254:24:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3254:31:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3254:31:78"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3191:6:78",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3199:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3207:5:78",
                "type": ""
              }
            ],
            "src": "3152:139:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3372:272:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3418:83:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3420:77:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3420:79:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3420:79:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3393:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3402:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3389:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3389:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3414:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3385:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3385:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "3382:119:78"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3511:126:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3526:15:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3540:1:78",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3530:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3555:72:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3599:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3610:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3595:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3595:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3619:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3565:29:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3565:62:78"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3555:6:78"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3353:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3365:6:78",
                "type": ""
              }
            ],
            "src": "3297:347:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3746:73:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3763:3:78"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3768:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3756:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3756:19:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3756:19:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3784:29:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3803:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3808:4:78",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3799:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3799:14:78"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3784:11:78"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3718:3:78",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3723:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3734:11:78",
                "type": ""
              }
            ],
            "src": "3650:169:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3931:119:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3953:6:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3961:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3949:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3949:14:78"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3965:34:78",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3942:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3942:58:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3942:58:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4021:6:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4029:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4017:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4017:15:78"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4034:8:78",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4010:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4010:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4010:33:78"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3923:6:78",
                "type": ""
              }
            ],
            "src": "3825:225:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4202:220:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4212:74:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4278:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4283:2:78",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4219:58:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4219:67:78"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4212:3:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4384:3:78"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "4295:88:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:93:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4295:93:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4397:19:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4408:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4413:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4404:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4404:12:78"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4397:3:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4190:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4198:3:78",
                "type": ""
              }
            ],
            "src": "4056:366:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4599:248:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4609:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4621:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4632:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4617:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4609:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4656:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4667:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4652:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4652:17:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4675:4:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4681:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4671:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4671:20:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4645:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4645:47:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4645:47:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4701:139:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4835:4:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4709:124:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4709:131:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4701:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4579:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4594:4:78",
                "type": ""
              }
            ],
            "src": "4428:419:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4959:76:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4981:6:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4989:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4977:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4977:14:78"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4993:34:78",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4970:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4970:58:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4970:58:78"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4951:6:78",
                "type": ""
              }
            ],
            "src": "4853:182:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5187:220:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5197:74:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5263:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5268:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5204:58:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5204:67:78"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5197:3:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5369:3:78"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "5280:88:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5280:93:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5280:93:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5382:19:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5393:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5398:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5389:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5389:12:78"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5382:3:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5175:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5183:3:78",
                "type": ""
              }
            ],
            "src": "5041:366:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5584:248:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5594:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5606:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5617:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5602:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5602:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5594:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5641:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5652:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5637:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5637:17:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5660:4:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5666:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5656:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5656:20:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5630:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5630:47:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5630:47:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5686:139:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5820:4:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5694:124:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5694:131:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5686:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5564:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5579:4:78",
                "type": ""
              }
            ],
            "src": "5413:419:78"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 78,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "393:1269:72:-:0;;;995:174;;;;;;;;;;936:32:21;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1054:21:72;;;;;;;;1060:11;1054:21;;;;1073:1;1054:21;;;;;1020:6;:12;885:42;1020:12;;;;;;;;;;;;;;;:31;342:3:0;1020:31:72;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:25;;;;;;;;1136:14;1130:25;;;;1152:2;1130:25;;;;;1096:6;:12;645:42;1096:12;;;;;;;;;;;;;;;:31;342:3:0;1096:31:72;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:1269;;640:96:29;693:7;719:10;712:17;;640:96;:::o;2433:187:21:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;393:1269:72:-;;;;;;;",
  "deployedSourceMap": "393:1269:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1201:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;614:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:21;;;:::i;:::-;;854:73:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;694:74:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;775:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1432:227:72;1502:13;1517:14;1552:6;:12;1559:4;1552:12;;;;;;;;;;;;;;;:31;342:3:0;1552:31:72;;;;;;;;;;;;;;;:37;;;1544:45;;1611:6;:12;1618:4;1611:12;;;;;;;;;;;;;;;:31;342:3:0;1611:31:72;;;;;;;;;;;;;;;:40;;;;;;;;;;;;1600:51;;1432:227;;;:::o;1201:143::-;1300:36;;;;;;;;1306:5;1300:36;;;;1319:4;1313:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1300:36;;;;;1266:6;:12;1273:4;1266:12;;;;;;;;;;;;;;;:31;342:3:0;1266:31:72;;;;;;;;;;;;;;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:143;;:::o;614:73::-;645:42;614:73;:::o;1831:101:21:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;854:73:72:-;885:42;854:73;:::o;1201:85:21:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;694:74:72:-;726:42;694:74;:::o;775:72::-;805:42;775:72;:::o;2081:198:21:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:29:-;693:7;719:10;712:17;;640:96;:::o;88:117:78:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:86::-;1418:7;1458:4;1451:5;1447:16;1436:27;;1383:86;;;:::o;1475:112::-;1558:22;1574:5;1558:22;:::i;:::-;1553:3;1546:35;1475:112;;:::o;1593:324::-;1710:4;1748:2;1737:9;1733:18;1725:26;;1761:71;1829:1;1818:9;1814:17;1805:6;1761:71;:::i;:::-;1842:68;1906:2;1895:9;1891:18;1882:6;1842:68;:::i;:::-;1593:324;;;;;:::o;1923:122::-;1996:24;2014:5;1996:24;:::i;:::-;1989:5;1986:35;1976:63;;2035:1;2032;2025:12;1976:63;1923:122;:::o;2051:139::-;2097:5;2135:6;2122:20;2113:29;;2151:33;2178:5;2151:33;:::i;:::-;2051:139;;;;:::o;2196:474::-;2264:6;2272;2321:2;2309:9;2300:7;2296:23;2292:32;2289:119;;;2327:79;;:::i;:::-;2289:119;2447:1;2472:53;2517:7;2508:6;2497:9;2493:22;2472:53;:::i;:::-;2462:63;;2418:117;2574:2;2600:53;2645:7;2636:6;2625:9;2621:22;2600:53;:::i;:::-;2590:63;;2545:118;2196:474;;;;;:::o;2676:118::-;2763:24;2781:5;2763:24;:::i;:::-;2758:3;2751:37;2676:118;;:::o;2800:222::-;2893:4;2931:2;2920:9;2916:18;2908:26;;2944:71;3012:1;3001:9;2997:17;2988:6;2944:71;:::i;:::-;2800:222;;;;:::o;3028:118::-;3099:22;3115:5;3099:22;:::i;:::-;3092:5;3089:33;3079:61;;3136:1;3133;3126:12;3079:61;3028:118;:::o;3152:139::-;3207:5;3238:6;3232:13;3223:22;;3254:31;3279:5;3254:31;:::i;:::-;3152:139;;;;:::o;3297:347::-;3365:6;3414:2;3402:9;3393:7;3389:23;3385:32;3382:119;;;3420:79;;:::i;:::-;3382:119;3540:1;3565:62;3619:7;3610:6;3599:9;3595:22;3565:62;:::i;:::-;3555:72;;3511:126;3297:347;;;;:::o;3650:169::-;3734:11;3768:6;3763:3;3756:19;3808:4;3803:3;3799:14;3784:29;;3650:169;;;;:::o;3825:225::-;3965:34;3961:1;3953:6;3949:14;3942:58;4034:8;4029:2;4021:6;4017:15;4010:33;3825:225;:::o;4056:366::-;4198:3;4219:67;4283:2;4278:3;4219:67;:::i;:::-;4212:74;;4295:93;4384:3;4295:93;:::i;:::-;4413:2;4408:3;4404:12;4397:19;;4056:366;;;:::o;4428:419::-;4594:4;4632:2;4621:9;4617:18;4609:26;;4681:9;4675:4;4671:20;4667:1;4656:9;4652:17;4645:47;4709:131;4835:4;4709:131;:::i;:::-;4701:139;;4428:419;;;:::o;4853:182::-;4993:34;4989:1;4981:6;4977:14;4970:58;4853:182;:::o;5041:366::-;5183:3;5204:67;5268:2;5263:3;5204:67;:::i;:::-;5197:74;;5280:93;5369:3;5280:93;:::i;:::-;5398:2;5393:3;5389:12;5382:19;;5041:366;;;:::o;5413:419::-;5579:4;5617:2;5606:9;5602:18;5594:26;;5666:9;5660:4;5656:20;5652:1;5641:9;5637:17;5630:47;5694:131;5820:4;5694:131;:::i;:::-;5686:139;;5413:419;;;:::o",
  "source": "//SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/Denominations.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"../interfaces/IUsdOracle.sol\";\r\n\r\n// import \"hardhat/console.sol\";\r\n\r\ncontract FakeOracle is IUsdOracle, Ownable {\r\n    error StaleChainlinkPrice();\r\n    error BadPrice();\r\n\r\n    struct Price {\r\n        uint256 price;\r\n        uint8 decimals;\r\n    }\r\n\r\n    // addresses from bnb chain!\r\n    address public constant BUSD = 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56;\r\n    address public constant BUSDT = 0x55d398326f99059fF775485246999027B3197955;\r\n    address public constant DAI = 0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3;\r\n    address public constant USDC = 0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d;\r\n    mapping(address => mapping(address => Price)) prices;\r\n\r\n    constructor() {\r\n        prices[USDC][Denominations.USD] = Price(100_100_000, 8); // 1.001$\r\n        prices[BUSD][Denominations.USD] = Price(10_000_000_000, 10); // 1$\r\n    }\r\n\r\n    // set fake prices\r\n    function setPrice(address base, uint256 price) public {\r\n        prices[base][Denominations.USD] = Price(price, ERC20(base).decimals());\r\n    }\r\n\r\n    /**\r\n     * Returns the latest token / usd price and its decimals\r\n     */\r\n    function getTokenUsdPrice(address base) public view override returns (uint256 price, uint8 decimals) {\r\n        price = prices[base][Denominations.USD].price;\r\n        decimals = prices[base][Denominations.USD].decimals;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\FVO_MMILLLER\\Desktop\\elvolution\\Testers\\contracts\\oracles\\FakeOracle.sol",
  "ast": {
    "absolutePath": "project:/contracts/oracles/FakeOracle.sol",
    "exportedSymbols": {
      "AggregatorInterface": [
        164
      ],
      "AggregatorV2V3Interface": [
        173
      ],
      "AggregatorV3Interface": [
        219
      ],
      "Context": [
        4494
      ],
      "Denominations": [
        116
      ],
      "ERC20": [
        3757
      ],
      "FakeOracle": [
        25972
      ],
      "FeedRegistryInterface": [
        530
      ],
      "IERC20": [
        3835
      ],
      "IERC20Metadata": [
        3860
      ],
      "IUsdOracle": [
        20922
      ],
      "Ownable": [
        3131
      ]
    },
    "id": 25973,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25850,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:72"
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/FeedRegistryInterface.sol",
        "id": 25851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25973,
        "sourceUnit": 531,
        "src": "67:76:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/Denominations.sol",
        "file": "@chainlink/contracts/src/v0.8/Denominations.sol",
        "id": 25852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25973,
        "sourceUnit": 117,
        "src": "145:57:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 25853,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25973,
        "sourceUnit": 3132,
        "src": "204:52:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 25854,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25973,
        "sourceUnit": 3758,
        "src": "258:55:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IUsdOracle.sol",
        "file": "../interfaces/IUsdOracle.sol",
        "id": 25855,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25973,
        "sourceUnit": 20923,
        "src": "315:38:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25856,
              "name": "IUsdOracle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20922,
              "src": "416:10:72"
            },
            "id": 25857,
            "nodeType": "InheritanceSpecifier",
            "src": "416:10:72"
          },
          {
            "baseName": {
              "id": 25858,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3131,
              "src": "428:7:72"
            },
            "id": 25859,
            "nodeType": "InheritanceSpecifier",
            "src": "428:7:72"
          }
        ],
        "canonicalName": "FakeOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25972,
        "linearizedBaseContracts": [
          25972,
          3131,
          4494,
          20922
        ],
        "name": "FakeOracle",
        "nameLocation": "402:10:72",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "3c7d1459",
            "id": 25861,
            "name": "StaleChainlinkPrice",
            "nameLocation": "449:19:72",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 25860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:2:72"
            },
            "src": "443:28:72"
          },
          {
            "errorSelector": "fd1ee349",
            "id": 25863,
            "name": "BadPrice",
            "nameLocation": "483:8:72",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 25862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:2:72"
            },
            "src": "477:17:72"
          },
          {
            "canonicalName": "FakeOracle.Price",
            "id": 25868,
            "members": [
              {
                "constant": false,
                "id": 25865,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "534:5:72",
                "nodeType": "VariableDeclaration",
                "scope": 25868,
                "src": "526:13:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25864,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "526:7:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25867,
                "mutability": "mutable",
                "name": "decimals",
                "nameLocation": "556:8:72",
                "nodeType": "VariableDeclaration",
                "scope": 25868,
                "src": "550:14:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 25866,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:5:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Price",
            "nameLocation": "509:5:72",
            "nodeType": "StructDefinition",
            "scope": 25972,
            "src": "502:70:72",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "484f4ea9",
            "id": 25871,
            "mutability": "constant",
            "name": "BUSD",
            "nameLocation": "638:4:72",
            "nodeType": "VariableDeclaration",
            "scope": 25972,
            "src": "614:73:72",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25869,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:72",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307865396537434541334465646341353938343738304261666335393962443639414464303837443536",
              "id": 25870,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "645:42:72",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "a624cdbe",
            "id": 25874,
            "mutability": "constant",
            "name": "BUSDT",
            "nameLocation": "718:5:72",
            "nodeType": "VariableDeclaration",
            "scope": 25972,
            "src": "694:74:72",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25872,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "694:7:72",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835356433393833323666393930353966463737353438353234363939393032374233313937393535",
              "id": 25873,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "726:42:72",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x55d398326f99059fF775485246999027B3197955"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e0bab4c4",
            "id": 25877,
            "mutability": "constant",
            "name": "DAI",
            "nameLocation": "799:3:72",
            "nodeType": "VariableDeclaration",
            "scope": 25972,
            "src": "775:72:72",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25875,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "775:7:72",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831414633463332396538424531353430373444383736394431464661346545303538423144426333",
              "id": 25876,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "805:42:72",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "89a30271",
            "id": 25880,
            "mutability": "constant",
            "name": "USDC",
            "nameLocation": "878:4:72",
            "nodeType": "VariableDeclaration",
            "scope": 25972,
            "src": "854:73:72",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25878,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "854:7:72",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838414337366135316363393530643938323244363862383366453141643937423332436435383064",
              "id": 25879,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "885:42:72",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25887,
            "mutability": "mutable",
            "name": "prices",
            "nameLocation": "980:6:72",
            "nodeType": "VariableDeclaration",
            "scope": 25972,
            "src": "934:52:72",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct FakeOracle.Price))"
            },
            "typeName": {
              "id": 25886,
              "keyType": {
                "id": 25881,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "942:7:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "934:45:72",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct FakeOracle.Price))"
              },
              "valueType": {
                "id": 25885,
                "keyType": {
                  "id": 25882,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "961:7:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "953:25:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$",
                  "typeString": "mapping(address => struct FakeOracle.Price)"
                },
                "valueType": {
                  "id": 25884,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 25883,
                    "name": "Price",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 25868,
                    "src": "972:5:72"
                  },
                  "referencedDeclaration": 25868,
                  "src": "972:5:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Price_$25868_storage_ptr",
                    "typeString": "struct FakeOracle.Price"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25914,
              "nodeType": "Block",
              "src": "1009:160:72",
              "statements": [
                {
                  "expression": {
                    "id": 25900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25890,
                          "name": "prices",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25887,
                          "src": "1020:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct FakeOracle.Price storage ref))"
                          }
                        },
                        "id": 25894,
                        "indexExpression": {
                          "id": 25891,
                          "name": "USDC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25880,
                          "src": "1027:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1020:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$",
                          "typeString": "mapping(address => struct FakeOracle.Price storage ref)"
                        }
                      },
                      "id": 25895,
                      "indexExpression": {
                        "expression": {
                          "id": 25892,
                          "name": "Denominations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "1033:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Denominations_$116_$",
                            "typeString": "type(library Denominations)"
                          }
                        },
                        "id": 25893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "1033:17:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1020:31:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Price_$25868_storage",
                        "typeString": "struct FakeOracle.Price storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130305f3130305f303030",
                          "id": 25897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1060:11:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100100000_by_1",
                            "typeString": "int_const 100100000"
                          },
                          "value": "100_100_000"
                        },
                        {
                          "hexValue": "38",
                          "id": 25898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1073:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100100000_by_1",
                            "typeString": "int_const 100100000"
                          },
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "id": 25896,
                        "name": "Price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25868,
                        "src": "1054:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Price_$25868_storage_ptr_$",
                          "typeString": "type(struct FakeOracle.Price storage pointer)"
                        }
                      },
                      "id": 25899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1054:21:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Price_$25868_memory_ptr",
                        "typeString": "struct FakeOracle.Price memory"
                      }
                    },
                    "src": "1020:55:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Price_$25868_storage",
                      "typeString": "struct FakeOracle.Price storage ref"
                    }
                  },
                  "id": 25901,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:55:72"
                },
                {
                  "expression": {
                    "id": 25912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25902,
                          "name": "prices",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25887,
                          "src": "1096:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct FakeOracle.Price storage ref))"
                          }
                        },
                        "id": 25906,
                        "indexExpression": {
                          "id": 25903,
                          "name": "BUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25871,
                          "src": "1103:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1096:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$",
                          "typeString": "mapping(address => struct FakeOracle.Price storage ref)"
                        }
                      },
                      "id": 25907,
                      "indexExpression": {
                        "expression": {
                          "id": 25904,
                          "name": "Denominations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "1109:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Denominations_$116_$",
                            "typeString": "type(library Denominations)"
                          }
                        },
                        "id": 25905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "1109:17:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1096:31:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Price_$25868_storage",
                        "typeString": "struct FakeOracle.Price storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31305f3030305f3030305f303030",
                          "id": 25909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1136:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "value": "10_000_000_000"
                        },
                        {
                          "hexValue": "3130",
                          "id": 25910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1152:2:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "id": 25908,
                        "name": "Price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25868,
                        "src": "1130:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Price_$25868_storage_ptr_$",
                          "typeString": "type(struct FakeOracle.Price storage pointer)"
                        }
                      },
                      "id": 25911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1130:25:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Price_$25868_memory_ptr",
                        "typeString": "struct FakeOracle.Price memory"
                      }
                    },
                    "src": "1096:59:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Price_$25868_storage",
                      "typeString": "struct FakeOracle.Price storage ref"
                    }
                  },
                  "id": 25913,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:59:72"
                }
              ]
            },
            "id": 25915,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:2:72"
            },
            "returnParameters": {
              "id": 25889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:72"
            },
            "scope": 25972,
            "src": "995:174:72",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25938,
              "nodeType": "Block",
              "src": "1255:89:72",
              "statements": [
                {
                  "expression": {
                    "id": 25936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25922,
                          "name": "prices",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25887,
                          "src": "1266:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct FakeOracle.Price storage ref))"
                          }
                        },
                        "id": 25926,
                        "indexExpression": {
                          "id": 25923,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25917,
                          "src": "1273:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1266:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$",
                          "typeString": "mapping(address => struct FakeOracle.Price storage ref)"
                        }
                      },
                      "id": 25927,
                      "indexExpression": {
                        "expression": {
                          "id": 25924,
                          "name": "Denominations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "1279:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Denominations_$116_$",
                            "typeString": "type(library Denominations)"
                          }
                        },
                        "id": 25925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "USD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "1279:17:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1266:31:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Price_$25868_storage",
                        "typeString": "struct FakeOracle.Price storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25929,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25919,
                          "src": "1306:5:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 25931,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25917,
                                  "src": "1319:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25930,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3757,
                                "src": "1313:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3757_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 25932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1313:11:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3757",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 25933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3246,
                            "src": "1313:20:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 25934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1313:22:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 25928,
                        "name": "Price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25868,
                        "src": "1300:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Price_$25868_storage_ptr_$",
                          "typeString": "type(struct FakeOracle.Price storage pointer)"
                        }
                      },
                      "id": 25935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1300:36:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Price_$25868_memory_ptr",
                        "typeString": "struct FakeOracle.Price memory"
                      }
                    },
                    "src": "1266:70:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Price_$25868_storage",
                      "typeString": "struct FakeOracle.Price storage ref"
                    }
                  },
                  "id": 25937,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:70:72"
                }
              ]
            },
            "functionSelector": "00e4768b",
            "id": 25939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPrice",
            "nameLocation": "1210:8:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25917,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1227:4:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 25939,
                  "src": "1219:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25919,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1241:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 25939,
                  "src": "1233:13:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:29:72"
            },
            "returnParameters": {
              "id": 25921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:0:72"
            },
            "scope": 25972,
            "src": "1201:143:72",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20921
            ],
            "body": {
              "id": 25970,
              "nodeType": "Block",
              "src": "1533:126:72",
              "statements": [
                {
                  "expression": {
                    "id": 25958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25950,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25946,
                      "src": "1544:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 25951,
                            "name": "prices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25887,
                            "src": "1552:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct FakeOracle.Price storage ref))"
                            }
                          },
                          "id": 25953,
                          "indexExpression": {
                            "id": 25952,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25942,
                            "src": "1559:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1552:12:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$",
                            "typeString": "mapping(address => struct FakeOracle.Price storage ref)"
                          }
                        },
                        "id": 25956,
                        "indexExpression": {
                          "expression": {
                            "id": 25954,
                            "name": "Denominations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "1565:13:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Denominations_$116_$",
                              "typeString": "type(library Denominations)"
                            }
                          },
                          "id": 25955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "USD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1565:17:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1552:31:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$25868_storage",
                          "typeString": "struct FakeOracle.Price storage ref"
                        }
                      },
                      "id": 25957,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25865,
                      "src": "1552:37:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1544:45:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25959,
                  "nodeType": "ExpressionStatement",
                  "src": "1544:45:72"
                },
                {
                  "expression": {
                    "id": 25968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25960,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25948,
                      "src": "1600:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 25961,
                            "name": "prices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25887,
                            "src": "1611:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct FakeOracle.Price storage ref))"
                            }
                          },
                          "id": 25963,
                          "indexExpression": {
                            "id": 25962,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25942,
                            "src": "1618:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1611:12:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Price_$25868_storage_$",
                            "typeString": "mapping(address => struct FakeOracle.Price storage ref)"
                          }
                        },
                        "id": 25966,
                        "indexExpression": {
                          "expression": {
                            "id": 25964,
                            "name": "Denominations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "1624:13:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Denominations_$116_$",
                              "typeString": "type(library Denominations)"
                            }
                          },
                          "id": 25965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "USD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1624:17:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1611:31:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$25868_storage",
                          "typeString": "struct FakeOracle.Price storage ref"
                        }
                      },
                      "id": 25967,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25867,
                      "src": "1611:40:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1600:51:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 25969,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:51:72"
                }
              ]
            },
            "documentation": {
              "id": 25940,
              "nodeType": "StructuredDocumentation",
              "src": "1352:74:72",
              "text": " Returns the latest token / usd price and its decimals"
            },
            "functionSelector": "00593bcf",
            "id": 25971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenUsdPrice",
            "nameLocation": "1441:16:72",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 25944,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1484:8:72"
            },
            "parameters": {
              "id": 25943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25942,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "1466:4:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 25971,
                  "src": "1458:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:14:72"
            },
            "returnParameters": {
              "id": 25949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25946,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1510:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 25971,
                  "src": "1502:13:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1502:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25948,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "1523:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 25971,
                  "src": "1517:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 25947,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1501:31:72"
            },
            "scope": 25972,
            "src": "1432:227:72",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25973,
        "src": "393:1269:72",
        "usedErrors": [
          25861,
          25863
        ]
      }
    ],
    "src": "40:1624:72"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-09-08T16:23:09.394Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getTokenUsdPrice(address)": {
        "notice": "Returns the latest token / usd price and its decimals"
      }
    },
    "version": 1
  }
}