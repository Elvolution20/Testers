{
  "contractName": "MockStrategy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositToken_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_mockProfitPercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AmountExceedTotalSupply",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AmountNotSpecified",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantRemoveLastStrategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CycleClosed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CycleNotClosableYet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CycleNotClosed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DuplicateStrategy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientShares",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NodepositDetected",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotModerator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotReceiptOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NothingToRebalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "closedCycleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AllocateToStrategies",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "receiptIds",
          "type": "uint256[]"
        }
      ],
      "name": "RedeemReceiptsToShares",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "moderator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "receiptIds",
          "type": "uint256[]"
        }
      ],
      "name": "RedeemReceiptsToSharesByModerators",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Exchange",
          "name": "_exchange",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IUsdOracle",
          "name": "_oracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract SharesToken",
          "name": "_sharesToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract Batch",
          "name": "_batch",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ReceiptNFT",
          "name": "_receiptNft",
          "type": "address"
        }
      ],
      "name": "SetAddresses",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDuration",
          "type": "uint256"
        }
      ],
      "name": "SetCycleDuration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "SetFeeAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPercent",
          "type": "uint256"
        }
      ],
      "name": "SetFeePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "SetMinDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "SetMinUsdPerCycle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFromBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFromStrategies",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_mockProfitPercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AmountExceedTotalSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantRemoveLastStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CycleClosed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CycleNotClosableYet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CycleNotClosed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DuplicateStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientShares\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NodepositDetected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotModerator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotReceiptOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToRebalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"closedCycleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AllocateToStrategies\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"receiptIds\",\"type\":\"uint256[]\"}],\"name\":\"RedeemReceiptsToShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"moderator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"receiptIds\",\"type\":\"uint256[]\"}],\"name\":\"RedeemReceiptsToSharesByModerators\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract Exchange\",\"name\":\"_exchange\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IUsdOracle\",\"name\":\"_oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract SharesToken\",\"name\":\"_sharesToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Batch\",\"name\":\"_batch\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ReceiptNFT\",\"name\":\"_receiptNft\",\"type\":\"address\"}],\"name\":\"SetAddresses\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDuration\",\"type\":\"uint256\"}],\"name\":\"SetCycleDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"SetFeeAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPercent\",\"type\":\"uint256\"}],\"name\":\"SetFeePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"SetMinDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"SetMinUsdPerCycle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFromStrategies\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"Max withdrawable amount is returned by totalTokens.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AllocateToStrategies(uint256,uint256)\":{\"notice\":\"Fires when batch is deposited into strategies.\"},\"Deposit(address,address,uint256)\":{\"notice\":\"Fires when user deposits in batch.\"},\"RedeemReceiptsToShares(address,uint256,uint256[])\":{\"notice\":\"Fires when user converts his receipt into shares token.\"},\"RedeemReceiptsToSharesByModerators(address,uint256[])\":{\"notice\":\"Fires when moderator converts foreign receipts into shares token.\"},\"WithdrawFromBatch(address,address,uint256)\":{\"notice\":\"Fires when user withdraw from batch.\"},\"WithdrawFromStrategies(address,address,uint256)\":{\"notice\":\"Fires when user withdraw from strategies.\"}},\"kind\":\"user\",\"methods\":{\"compound()\":{\"notice\":\"Harvest rewards and reinvest them.\"},\"deposit(uint256)\":{\"notice\":\"Deposit token to strategy.\"},\"depositToken()\":{\"notice\":\"Token used to deposit to strategy.\"},\"totalTokens()\":{\"notice\":\"Approximated amount of token on the strategy.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw tokens from strategy.\"},\"withdrawAll()\":{\"notice\":\"Withdraw all tokens from strategy.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/test/MockStrategy.sol\":\"MockStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6e36e9b4b71de699c2f3f0d4e4d1aa0b35da99a26e8d5b91ef09ba234b4ef270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abfa467c53a0d60b4d09bf04aa952b1d1d44e5766fcc053aace078d7859b8419\",\"dweb:/ipfs/QmebVTZpyNxYfKYTuLMywzEJTdc1Ca8ME4xm3kR9gQgToG\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x5331c8909221d9f9f3851cfadd5959d0873413a2c27e30e0f2fa234158c1c6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31c7d52f47a9174e236c0402654f42c16516c58c6851862f3bcb1b440b873498\",\"dweb:/ipfs/QmZQqiofa8jPJCCAfWyjNnBuoGXrR56Ct4HyW4ugRWfvCb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0xba23699a773023d902d2b8ff5f76e3d8e17d1dedd9e3f27343f7583266855d07\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fb3ad44eb3f32f00fa7094ad7f53b86e74fdfe5470782f441798e843831c239f\",\"dweb:/ipfs/QmXkJha521WyMGBJ6pNDTL1XpEFukSDiLifju9vm5b23gc\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x6e5fc45612098cf6f847905667558fb2524095d67d769c4dbdadea130fea3a58\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7c32842c476a6349562ee288bf190be9af001960ebc619a486a4c95a192f9552\",\"dweb:/ipfs/QmPKjWSUNUucHM6rG8FALRuQF7fJqRXAigJTbrqkWgZ3pP\"]},\"hardhat/console.sol\":{\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e29880d33dd479bb046ba306993d26ccb779a4b1d94a046cb3567f22948bb4d\",\"dweb:/ipfs/QmfTY1qzPt5C63Wc7y6JqfZr5899NRvXYdCpyLzR5FXQic\"]},\"project:/contracts/deps/EnumerableSetExtension.sol\":{\"keccak256\":\"0xc09b6f66a4027ee76d75936a7abf127e1dcc41921a2433098991c3d643af8f10\",\"urls\":[\"bzz-raw://0775192a24cd6f64cacc9995de4562848140f3d20bad0631b52573780329a8a0\",\"dweb:/ipfs/Qmd4UWLzosUqs5VSWV48wPRMbt3RymB8DLYvHD56MpnZRt\"]},\"project:/contracts/exchange/Exchange.sol\":{\"keccak256\":\"0x4ea622b5db6786c70eb3b99b9a49ded6921b64e5b1fa3e57d98f12f80d1983d6\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6aacccfb699a9330133e3a343611698a3d034335213d15c1e1f54768e6bdb219\",\"dweb:/ipfs/QmfEZV1UREZzNtn9vvwDAQZKrsBJY6hp2KZu76se9rVJwM\"]},\"project:/contracts/interfaces/ICurvePool.sol\":{\"keccak256\":\"0x968971f626a70525e025b2ec5433f7e8d50713fe1048a107b8c7288877cb56e2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://21fcd1c45424083ac3c8a6369e6d28c7ad0b33be04633b6619cf1ac084c375a3\",\"dweb:/ipfs/QmQ8McchbfWXHv8LiS9FoGq4KT75jXD4T56au6snqRZVzX\"]},\"project:/contracts/interfaces/IExchangePlugin.sol\":{\"keccak256\":\"0x66913b968ed867be6d24704325f17e5d4670b1eca3d9ed125740d2aa40372dd5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1c72c38973f2919ba3ac569129d5d3df099b9907a86154cdf7fc9375be5e7093\",\"dweb:/ipfs/QmbQ7S5VujCsCAKViqeBwxiQ8h6BZXbQvFhoFJ8KftZFrJ\"]},\"project:/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x5cb0189b225e6d4075337cd96d8c6f9262418c95cbb65ca56fdd23e371317100\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://cdaad3588c049888f4677d391bb0ca71ec75a4f6d6344f6186706cbb7c131409\",\"dweb:/ipfs/QmRrLBUhm3JXqZGVP5JSksfojZHi8m6zjfYcpJQC8ec54v\"]},\"project:/contracts/interfaces/IUsdOracle.sol\":{\"keccak256\":\"0xe93076c75786c51180946175e7257eb4126c53645f110fc3a47d0639a653928a\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://38ef90584e16b61575c1ef658fb3252c40355fdb0eb733d6a91a85d6a21aedec\",\"dweb:/ipfs/QmRzHnmYsUNXjWQHVGsSHrMRPf6Wku2cfPM6otQXEGt2ek\"]},\"project:/contracts/main/Batch.sol\":{\"keccak256\":\"0xb39df36817092a3d23cb60aa1d06ee8bd0fc344936802e1e13f537d4528c0261\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://0c585deaefa27dcc80e61bb2f0390d4e98c3aade2471296f97124af8f1da5fce\",\"dweb:/ipfs/QmbM8UYmoWE3vbBwqqWwYD8VCsMtXgajpJ516sk1ugHx3u\"]},\"project:/contracts/main/Moderator.sol\":{\"keccak256\":\"0x3d2917fae9d060553bd929b9877150fef8897b838e03529e9a0f1031f13549e0\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b7d95c18db39e21d96e7114eff2bbd87e241ce0db1d9f888e5a5f8b4b22287b5\",\"dweb:/ipfs/QmWWJVryBwEMPHPeUvwpSQZjEQ9uiMspGh4EXkYtC4Musz\"]},\"project:/contracts/main/ReceiptNFT.sol\":{\"keccak256\":\"0xc280fb683738ab61f1c160dae1162ccff099d163c9e15f1c0e17a3b795d163ac\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://12176fb9c0138ec99753b3b5a47d96fddfe4ad1367dc89765a48f29f98c01500\",\"dweb:/ipfs/QmY9Yk84o3vZE3MmkrBBHygDZy5fNC8bn7zxnsi7DWNFjZ\"]},\"project:/contracts/main/SharesToken.sol\":{\"keccak256\":\"0x7f5c62c43f4716083b7b8c25864ca3fa3a4d197100121f477bf1a76f652077d6\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9a82592452b3e055588fadd0345c01393e3e8884a6aa3da3bccd1c7e87830ed0\",\"dweb:/ipfs/QmZ2Favck6GEdV1pKuwX65rgTx9zgUKQtHxpCYnATefMDy\"]},\"project:/contracts/main/StrategyRouter.sol\":{\"keccak256\":\"0x561010964cc4452e8ec6579693106e6406305aa41abe1ddbb444a1eac1348f5d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4fa13fe563469602d0e674e6aad44e4f64c27ab3309facc15ea9941410f4d091\",\"dweb:/ipfs/QmPHEKK58xrraq1izyvA97VMMnPb7tRnapLD5cAboY4abj\"]},\"project:/contracts/main/StrategyRouterLib.sol\":{\"keccak256\":\"0xa78515ae7ec2c354a400307e4e6f72304370a74018f240cd6a43e8c1ab814e62\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ffd95c3b1ef6a0c1395486f14c78acdc00a6fda61de6f3aa32bb1aa81ce56e04\",\"dweb:/ipfs/QmQtVvvSpVuMYqRfdgixsbcGL1o5mwFPTG5YU6FBtp9Y62\"]},\"project:/contracts/test/MockStrategy.sol\":{\"keccak256\":\"0x33179275b9ea8a3863d9cf79bce7436dd837e76d8729feef5e50b59c4746f512\",\"license\":\"Unlicens\",\"urls\":[\"bzz-raw://3cfd3eca2bb85b86e08735517471d65834145681c4e255e109bf434bf425f743\",\"dweb:/ipfs/QmXLiGAyRA7uXTtkee3pdjPgdZr8VkvGGYHzRpe2jvkHqQ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000c8138038062000c81833981810160405281019062000037919062000218565b620000576200004b620000a760201b60201c565b620000af60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060038190555050506200025f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a58262000178565b9050919050565b620001b78162000198565b8114620001c357600080fd5b50565b600081519050620001d781620001ac565b92915050565b6000819050919050565b620001f281620001dd565b8114620001fe57600080fd5b50565b6000815190506200021281620001e7565b92915050565b6000806040838503121562000232576200023162000173565b5b60006200024285828601620001c6565b9250506020620002558582860162000201565b9150509250929050565b610a12806200026f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010e578063b6b55f251461012c578063c89039c514610148578063f2fde38b14610166578063f69e20461461018257610093565b80632e1a7d4d14610098578063715018a6146100c85780637e1c0c09146100d2578063853828b6146100f0575b600080fd5b6100b260048036038101906100ad91906105c0565b61018c565b6040516100bf91906105fc565b60405180910390f35b6100d0610250565b005b6100da610264565b6040516100e791906105fc565b60405180910390f35b6100f861026e565b60405161010591906105fc565b60405180910390f35b610116610324565b6040516101239190610658565b60405180910390f35b610146600480360381019061014191906105c0565b61034d565b005b610150610369565b60405161015d9190610658565b60405180910390f35b610180600480360381019061017b919061069f565b610393565b005b61018a610416565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016101eb9291906106cc565b6020604051808303816000875af115801561020a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022e919061072d565b5081600260008282546102419190610789565b92505081905550819050919050565b61025861043b565b61026260006104b9565b565b6000600254905090565b6000806002541115610321576002549050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102dc9291906106cc565b6020604051808303816000875af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f919061072d565b505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806002600082825461035f91906107bd565b9250508190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61039b61043b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610896565b60405180910390fd5b610413816104b9565b50565b61271060035460025461042991906108b6565b610433919061093f565b600281905550565b61044361057d565b73ffffffffffffffffffffffffffffffffffffffff16610461610324565b73ffffffffffffffffffffffffffffffffffffffff16146104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae906109bc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61059d8161058a565b81146105a857600080fd5b50565b6000813590506105ba81610594565b92915050565b6000602082840312156105d6576105d5610585565b5b60006105e4848285016105ab565b91505092915050565b6105f68161058a565b82525050565b600060208201905061061160008301846105ed565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064282610617565b9050919050565b61065281610637565b82525050565b600060208201905061066d6000830184610649565b92915050565b61067c81610637565b811461068757600080fd5b50565b60008135905061069981610673565b92915050565b6000602082840312156106b5576106b4610585565b5b60006106c38482850161068a565b91505092915050565b60006040820190506106e16000830185610649565b6106ee60208301846105ed565b9392505050565b60008115159050919050565b61070a816106f5565b811461071557600080fd5b50565b60008151905061072781610701565b92915050565b60006020828403121561074357610742610585565b5b600061075184828501610718565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107948261058a565b915061079f8361058a565b9250828210156107b2576107b161075a565b5b828203905092915050565b60006107c88261058a565b91506107d38361058a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108085761080761075a565b5b828201905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610880602683610813565b915061088b82610824565b604082019050919050565b600060208201905081810360008301526108af81610873565b9050919050565b60006108c18261058a565b91506108cc8361058a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109055761090461075a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061094a8261058a565b91506109558361058a565b92508261096557610964610910565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109a6602083610813565b91506109b182610970565b602082019050919050565b600060208201905081810360008301526109d581610999565b905091905056fea2646970667358221220672901c7f70255d83c64ca5b5369533af15af7c898339566f513931ca3aa74e264736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010e578063b6b55f251461012c578063c89039c514610148578063f2fde38b14610166578063f69e20461461018257610093565b80632e1a7d4d14610098578063715018a6146100c85780637e1c0c09146100d2578063853828b6146100f0575b600080fd5b6100b260048036038101906100ad91906105c0565b61018c565b6040516100bf91906105fc565b60405180910390f35b6100d0610250565b005b6100da610264565b6040516100e791906105fc565b60405180910390f35b6100f861026e565b60405161010591906105fc565b60405180910390f35b610116610324565b6040516101239190610658565b60405180910390f35b610146600480360381019061014191906105c0565b61034d565b005b610150610369565b60405161015d9190610658565b60405180910390f35b610180600480360381019061017b919061069f565b610393565b005b61018a610416565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016101eb9291906106cc565b6020604051808303816000875af115801561020a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022e919061072d565b5081600260008282546102419190610789565b92505081905550819050919050565b61025861043b565b61026260006104b9565b565b6000600254905090565b6000806002541115610321576002549050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102dc9291906106cc565b6020604051808303816000875af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f919061072d565b505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806002600082825461035f91906107bd565b9250508190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61039b61043b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610896565b60405180910390fd5b610413816104b9565b50565b61271060035460025461042991906108b6565b610433919061093f565b600281905550565b61044361057d565b73ffffffffffffffffffffffffffffffffffffffff16610461610324565b73ffffffffffffffffffffffffffffffffffffffff16146104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae906109bc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61059d8161058a565b81146105a857600080fd5b50565b6000813590506105ba81610594565b92915050565b6000602082840312156105d6576105d5610585565b5b60006105e4848285016105ab565b91505092915050565b6105f68161058a565b82525050565b600060208201905061061160008301846105ed565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064282610617565b9050919050565b61065281610637565b82525050565b600060208201905061066d6000830184610649565b92915050565b61067c81610637565b811461068757600080fd5b50565b60008135905061069981610673565b92915050565b6000602082840312156106b5576106b4610585565b5b60006106c38482850161068a565b91505092915050565b60006040820190506106e16000830185610649565b6106ee60208301846105ed565b9392505050565b60008115159050919050565b61070a816106f5565b811461071557600080fd5b50565b60008151905061072781610701565b92915050565b60006020828403121561074357610742610585565b5b600061075184828501610718565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107948261058a565b915061079f8361058a565b9250828210156107b2576107b161075a565b5b828203905092915050565b60006107c88261058a565b91506107d38361058a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108085761080761075a565b5b828201905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610880602683610813565b915061088b82610824565b604082019050919050565b600060208201905081810360008301526108af81610873565b9050919050565b60006108c18261058a565b91506108cc8361058a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109055761090461075a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061094a8261058a565b91506109558361058a565b92508261096557610964610910565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109a6602083610813565b91506109b182610970565b602082019050919050565b600060208201905081810360008301526109d581610999565b905091905056fea2646970667358221220672901c7f70255d83c64ca5b5369533af15af7c898339566f513931ca3aa74e264736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1715:78",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:78",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:78"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:78"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:78",
                "type": ""
              }
            ],
            "src": "7:75:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:78",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:78"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:78",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:78"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:78",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:78",
                "type": ""
              }
            ],
            "src": "334:126:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:78",
                "type": ""
              }
            ],
            "src": "466:96:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:78"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:78"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:78"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:78",
                "type": ""
              }
            ],
            "src": "568:122:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:78"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:78"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:78",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:78",
                "type": ""
              }
            ],
            "src": "696:143:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "890:32:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "900:16:78",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "911:5:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "900:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "872:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "882:7:78",
                "type": ""
              }
            ],
            "src": "845:77:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "971:79:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1028:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1037:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1040:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1030:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1030:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1030:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "994:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1019:5:78"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1001:17:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1001:24:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "991:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "991:35:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "984:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "984:43:78"
                  },
                  "nodeType": "YulIf",
                  "src": "981:63:78"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "964:5:78",
                "type": ""
              }
            ],
            "src": "928:122:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1119:80:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1129:22:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1144:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1138:5:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1138:13:78"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1129:5:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1187:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1160:26:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1160:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1160:33:78"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1097:6:78",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1105:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1113:5:78",
                "type": ""
              }
            ],
            "src": "1056:143:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1299:413:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1345:83:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1347:77:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1347:79:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1347:79:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1320:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1329:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1316:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1316:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1341:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1312:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1312:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "1309:119:78"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1438:128:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1453:15:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1467:1:78",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1457:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1482:74:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1528:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1539:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1524:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1524:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1548:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1492:31:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1492:64:78"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1482:6:78"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1576:129:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1591:16:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1605:2:78",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1595:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1621:74:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1667:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1678:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1663:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1663:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1687:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1631:31:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1631:64:78"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1621:6:78"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1261:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1272:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1284:6:78",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1292:6:78",
                "type": ""
              }
            ],
            "src": "1205:507:78"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 78,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7231:78",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:78",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:78"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:78"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:78",
                "type": ""
              }
            ],
            "src": "7:75:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:78",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:78"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:78",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:78"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:78",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:78",
                "type": ""
              }
            ],
            "src": "334:77:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:78"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:78"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:78"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:78",
                "type": ""
              }
            ],
            "src": "417:122:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:78"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:78",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:78",
                "type": ""
              }
            ],
            "src": "545:139:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:78"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:78",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:78"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:78"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:78",
                "type": ""
              }
            ],
            "src": "690:329:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:53:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:78"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:17:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:24:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:37:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:37:78"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:78",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:78",
                "type": ""
              }
            ],
            "src": "1025:118:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:124:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1269:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1280:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1265:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1257:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1337:6:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1361:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:17:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1293:43:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:71:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1293:71:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1219:9:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1231:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1242:4:78",
                "type": ""
              }
            ],
            "src": "1149:222:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:81:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:65:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1447:5:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:42:78",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:54:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1432:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1404:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1414:7:78",
                "type": ""
              }
            ],
            "src": "1377:126:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1554:51:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1564:35:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1593:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1575:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:24:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1564:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1536:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1546:7:78",
                "type": ""
              }
            ],
            "src": "1509:96:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1716:5:78"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1698:17:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:24:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1686:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:37:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:37:78"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1664:5:78",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:78",
                "type": ""
              }
            ],
            "src": "1611:118:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:124:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1855:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1851:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1843:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1923:6:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:17:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1879:43:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:71:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:71:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:78",
                "type": ""
              }
            ],
            "src": "1735:222:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:79:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2063:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2075:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2065:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2065:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2065:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2029:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2054:5:78"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2036:17:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2036:24:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2026:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:35:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2019:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:43:78"
                  },
                  "nodeType": "YulIf",
                  "src": "2016:63:78"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1999:5:78",
                "type": ""
              }
            ],
            "src": "1963:122:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2143:87:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2153:29:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2175:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2162:12:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2153:5:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2218:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2191:26:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2191:33:78"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2121:6:78",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2129:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2137:5:78",
                "type": ""
              }
            ],
            "src": "2091:139:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2302:263:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2348:83:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2350:77:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2350:79:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2350:79:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2323:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2319:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2319:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2344:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2315:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "2312:119:78"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2441:117:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2456:15:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:78",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2460:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2485:63:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2520:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2531:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2540:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2495:20:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2495:53:78"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2485:6:78"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2272:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2283:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2295:6:78",
                "type": ""
              }
            ],
            "src": "2236:329:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2697:206:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2707:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2719:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2730:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2715:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2715:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2707:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2787:6:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2800:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2811:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2796:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2796:17:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2743:43:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:71:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2743:71:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2868:6:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2881:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2892:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2877:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2877:18:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2824:43:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:72:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2824:72:78"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2661:9:78",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2673:6:78",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2681:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2692:4:78",
                "type": ""
              }
            ],
            "src": "2571:332:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2951:48:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2961:32:78",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2986:5:78"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2979:6:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2979:13:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2972:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2972:21:78"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2961:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2933:5:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2943:7:78",
                "type": ""
              }
            ],
            "src": "2909:90:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3045:76:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3099:16:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3108:1:78",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3111:1:78",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3101:6:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3101:12:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3101:12:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3068:5:78"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3090:5:78"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "3075:14:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3075:21:78"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3065:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3065:32:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3058:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3058:40:78"
                  },
                  "nodeType": "YulIf",
                  "src": "3055:60:78"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3038:5:78",
                "type": ""
              }
            ],
            "src": "3005:116:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3187:77:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3197:22:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3212:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3206:5:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3206:13:78"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3197:5:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3252:5:78"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3228:23:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3228:30:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3228:30:78"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3165:6:78",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3173:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3181:5:78",
                "type": ""
              }
            ],
            "src": "3127:137:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3344:271:78",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3390:83:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3392:77:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3392:79:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3392:79:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3365:7:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3374:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3361:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3361:23:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3386:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3357:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3357:32:78"
                  },
                  "nodeType": "YulIf",
                  "src": "3354:119:78"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3483:125:78",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3498:15:78",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3512:1:78",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3502:6:78",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3527:71:78",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3570:9:78"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3581:6:78"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3566:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3566:22:78"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3590:7:78"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3537:28:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3537:61:78"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3527:6:78"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3314:9:78",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3325:7:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3337:6:78",
                "type": ""
              }
            ],
            "src": "3270:345:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3649:152:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3666:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3669:77:78",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3659:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3659:88:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3659:88:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3763:1:78",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3766:4:78",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3756:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3756:15:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3756:15:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3787:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3790:4:78",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3780:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3780:15:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3780:15:78"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3621:180:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3852:146:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3862:25:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3885:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3867:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3867:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "3862:1:78"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3896:25:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3919:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3901:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3901:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "3896:1:78"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3943:22:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3945:16:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3945:18:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3945:18:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3937:1:78"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3940:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3934:2:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3934:8:78"
                  },
                  "nodeType": "YulIf",
                  "src": "3931:34:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3975:17:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3987:1:78"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3990:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3983:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3983:9:78"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3975:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3838:1:78",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3841:1:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3847:4:78",
                "type": ""
              }
            ],
            "src": "3807:191:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4048:261:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4058:25:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4081:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4063:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4063:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4058:1:78"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4092:25:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4115:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4097:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4092:1:78"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4255:22:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4257:16:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4257:18:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4257:18:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4176:1:78"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4183:66:78",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4251:1:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4179:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4179:74:78"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4173:2:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4173:81:78"
                  },
                  "nodeType": "YulIf",
                  "src": "4170:107:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4287:16:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4298:1:78"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4301:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4294:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:9:78"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4287:3:78"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4035:1:78",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4038:1:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4044:3:78",
                "type": ""
              }
            ],
            "src": "4004:305:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4411:73:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4428:3:78"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4433:6:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4421:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4421:19:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4421:19:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4449:29:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4468:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4473:4:78",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4464:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4464:14:78"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4449:11:78"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4383:3:78",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4388:6:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4399:11:78",
                "type": ""
              }
            ],
            "src": "4315:169:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4596:119:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4618:6:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4626:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4614:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4614:14:78"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4630:34:78",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4607:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4607:58:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4607:58:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4686:6:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4694:2:78",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4682:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4682:15:78"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4699:8:78",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4675:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4675:33:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4675:33:78"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4588:6:78",
                "type": ""
              }
            ],
            "src": "4490:225:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4867:220:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4877:74:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4943:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4948:2:78",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4884:58:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4884:67:78"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4877:3:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5049:3:78"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "4960:88:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4960:93:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4960:93:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5062:19:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5073:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5078:2:78",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5069:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5069:12:78"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5062:3:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4855:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4863:3:78",
                "type": ""
              }
            ],
            "src": "4721:366:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5264:248:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5274:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5286:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5297:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5282:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5282:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5274:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5321:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5332:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5317:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5317:17:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5340:4:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5346:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5336:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5336:20:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5310:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5310:47:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5310:47:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5366:139:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5500:4:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5374:124:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5374:131:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5366:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5244:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5259:4:78",
                "type": ""
              }
            ],
            "src": "5093:419:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5566:300:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5576:25:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5599:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5581:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5581:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "5576:1:78"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5610:25:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5633:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5615:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5615:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "5610:1:78"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5808:22:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5810:16:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5810:18:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5810:18:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5720:1:78"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5713:6:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5713:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5706:6:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5706:17:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5728:1:78"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5735:66:78",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5803:1:78"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "5731:3:78"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5731:74:78"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5725:2:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5725:81:78"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5702:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5702:105:78"
                  },
                  "nodeType": "YulIf",
                  "src": "5699:131:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5840:20:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5855:1:78"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5858:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "5851:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5851:9:78"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "5840:7:78"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5549:1:78",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5552:1:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "5558:7:78",
                "type": ""
              }
            ],
            "src": "5518:348:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5900:152:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5917:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5920:77:78",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5910:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5910:88:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5910:88:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6014:1:78",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6017:4:78",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6007:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6007:15:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6007:15:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6038:1:78",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6041:4:78",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6031:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6031:15:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6031:15:78"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "5872:180:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6100:143:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6110:25:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6133:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6115:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6110:1:78"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6144:25:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6167:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6149:17:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6149:20:78"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6144:1:78"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6191:22:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "6193:16:78"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6193:18:78"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6193:18:78"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6188:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6181:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6181:9:78"
                  },
                  "nodeType": "YulIf",
                  "src": "6178:35:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6223:14:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6232:1:78"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6235:1:78"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6228:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6228:9:78"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6223:1:78"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6089:1:78",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6092:1:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6098:1:78",
                "type": ""
              }
            ],
            "src": "6058:185:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6355:76:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6377:6:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6385:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6373:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6373:14:78"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6389:34:78",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6366:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6366:58:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6366:58:78"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6347:6:78",
                "type": ""
              }
            ],
            "src": "6249:182:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6583:220:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6593:74:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6659:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6664:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6600:58:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6600:67:78"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6593:3:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6765:3:78"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "6676:88:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6676:93:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6676:93:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6778:19:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6789:3:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6794:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6785:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6785:12:78"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6778:3:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6571:3:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6579:3:78",
                "type": ""
              }
            ],
            "src": "6437:366:78"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6980:248:78",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6990:26:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7002:9:78"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7013:2:78",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6998:3:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6998:18:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6990:4:78"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7037:9:78"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7048:1:78",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7033:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7033:17:78"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7056:4:78"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7062:9:78"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7052:3:78"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7052:20:78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7026:6:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7026:47:78"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7026:47:78"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7082:139:78",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7216:4:78"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7090:124:78"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7090:131:78"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7082:4:78"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6960:9:78",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6975:4:78",
                "type": ""
              }
            ],
            "src": "6809:419:78"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 78,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "306:1341:73:-:0;;;465:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:21;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;555:13:73;539;;:29;;;;;;;;;;;;;;;;;;599:18;579:17;:38;;;;465:160;;306:1341;;640:96:29;693:7;719:10;712:17;;640:96;:::o;2433:187:21:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:78:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;306:1341:73:-;;;;;;;",
  "deployedSourceMap": "306:1341:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:21;;;:::i;:::-;;1304:97:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1409:235;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;745:191:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;633:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1190:106:73;;;:::i;:::-;;944:238;1032:23;1079:13;;;;;;;;;;;1073:29;;;1103:10;1115:6;1073:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1144:6;1133:7;;:17;;;;;;;:::i;:::-;;;;;;;;1168:6;1161:13;;944:238;;;:::o;1831:101:21:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1304:97:73:-;1359:7;1386;;1379:14;;1304:97;:::o;1409:235::-;1459:23;1509:1;1499:7;;:11;1495:142;;;1545:7;;1527:25;;1573:13;;;;;;;;;;;1567:29;;;1597:10;1609:15;1567:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1495:142;1409:235;:::o;1201:85:21:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;745:191:73:-;922:6;911:7;;:17;;;;;;;:::i;:::-;;;;;;;;745:191;:::o;633:104::-;689:7;716:13;;;;;;;;;;;709:20;;633:104;:::o;2081:198:21:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1190:106:73:-;1283:5;1262:17;;1252:7;;:27;;;;:::i;:::-;1251:37;;;;:::i;:::-;1241:7;:47;;;;1190:106::o;1359:130:21:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:29:-;693:7;719:10;712:17;;640:96;:::o;88:117:78:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:332::-;2692:4;2730:2;2719:9;2715:18;2707:26;;2743:71;2811:1;2800:9;2796:17;2787:6;2743:71;:::i;:::-;2824:72;2892:2;2881:9;2877:18;2868:6;2824:72;:::i;:::-;2571:332;;;;;:::o;2909:90::-;2943:7;2986:5;2979:13;2972:21;2961:32;;2909:90;;;:::o;3005:116::-;3075:21;3090:5;3075:21;:::i;:::-;3068:5;3065:32;3055:60;;3111:1;3108;3101:12;3055:60;3005:116;:::o;3127:137::-;3181:5;3212:6;3206:13;3197:22;;3228:30;3252:5;3228:30;:::i;:::-;3127:137;;;;:::o;3270:345::-;3337:6;3386:2;3374:9;3365:7;3361:23;3357:32;3354:119;;;3392:79;;:::i;:::-;3354:119;3512:1;3537:61;3590:7;3581:6;3570:9;3566:22;3537:61;:::i;:::-;3527:71;;3483:125;3270:345;;;;:::o;3621:180::-;3669:77;3666:1;3659:88;3766:4;3763:1;3756:15;3790:4;3787:1;3780:15;3807:191;3847:4;3867:20;3885:1;3867:20;:::i;:::-;3862:25;;3901:20;3919:1;3901:20;:::i;:::-;3896:25;;3940:1;3937;3934:8;3931:34;;;3945:18;;:::i;:::-;3931:34;3990:1;3987;3983:9;3975:17;;3807:191;;;;:::o;4004:305::-;4044:3;4063:20;4081:1;4063:20;:::i;:::-;4058:25;;4097:20;4115:1;4097:20;:::i;:::-;4092:25;;4251:1;4183:66;4179:74;4176:1;4173:81;4170:107;;;4257:18;;:::i;:::-;4170:107;4301:1;4298;4294:9;4287:16;;4004:305;;;;:::o;4315:169::-;4399:11;4433:6;4428:3;4421:19;4473:4;4468:3;4464:14;4449:29;;4315:169;;;;:::o;4490:225::-;4630:34;4626:1;4618:6;4614:14;4607:58;4699:8;4694:2;4686:6;4682:15;4675:33;4490:225;:::o;4721:366::-;4863:3;4884:67;4948:2;4943:3;4884:67;:::i;:::-;4877:74;;4960:93;5049:3;4960:93;:::i;:::-;5078:2;5073:3;5069:12;5062:19;;4721:366;;;:::o;5093:419::-;5259:4;5297:2;5286:9;5282:18;5274:26;;5346:9;5340:4;5336:20;5332:1;5321:9;5317:17;5310:47;5374:131;5500:4;5374:131;:::i;:::-;5366:139;;5093:419;;;:::o;5518:348::-;5558:7;5581:20;5599:1;5581:20;:::i;:::-;5576:25;;5615:20;5633:1;5615:20;:::i;:::-;5610:25;;5803:1;5735:66;5731:74;5728:1;5725:81;5720:1;5713:9;5706:17;5702:105;5699:131;;;5810:18;;:::i;:::-;5699:131;5858:1;5855;5851:9;5840:20;;5518:348;;;;:::o;5872:180::-;5920:77;5917:1;5910:88;6017:4;6014:1;6007:15;6041:4;6038:1;6031:15;6058:185;6098:1;6115:20;6133:1;6115:20;:::i;:::-;6110:25;;6149:20;6167:1;6149:20;:::i;:::-;6144:25;;6188:1;6178:35;;6193:18;;:::i;:::-;6178:35;6235:1;6232;6228:9;6223:14;;6058:185;;;;:::o;6249:182::-;6389:34;6385:1;6377:6;6373:14;6366:58;6249:182;:::o;6437:366::-;6579:3;6600:67;6664:2;6659:3;6600:67;:::i;:::-;6593:74;;6676:93;6765:3;6676:93;:::i;:::-;6794:2;6789:3;6785:12;6778:19;;6437:366;;;:::o;6809:419::-;6975:4;7013:2;7002:9;6998:18;6990:26;;7062:9;7056:4;7052:20;7048:1;7037:9;7033:17;7026:47;7090:131;7216:4;7090:131;:::i;:::-;7082:139;;6809:419;;;:::o",
  "source": "//SPDX-License-Identifier: Unlicens\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"../interfaces/IStrategy.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"hardhat/console.sol\";\r\n\r\ncontract MockStrategy is Ownable, IStrategy {\r\n    address private _depositToken;\r\n    uint256 private balance;\r\n    uint256 private mockProfitPercent;\r\n\r\n    constructor(address depositToken_, uint256 _mockProfitPercent) {\r\n        _depositToken = depositToken_;\r\n        mockProfitPercent = _mockProfitPercent;\r\n    }\r\n\r\n    function depositToken() external view override returns (address) {\r\n        return _depositToken;\r\n    }\r\n\r\n    function deposit(uint256 amount) external override {\r\n        // console.log(\"MockStrategy.deposit\", amount, ERC20(_depositToken).balanceOf(address(this)));\r\n        balance += amount;\r\n    }\r\n\r\n    function withdraw(uint256 amount)\r\n        external\r\n        override\r\n        returns (uint256 amountWithdrawn)\r\n    {\r\n        ERC20(_depositToken).transfer(msg.sender, amount);\r\n        balance -= amount;\r\n        return amount;\r\n    }\r\n\r\n    function compound() external override {\r\n\r\n        balance = (balance * mockProfitPercent) / 10000;\r\n    }\r\n\r\n    function totalTokens() external view override returns (uint256) {\r\n        return balance;\r\n    }\r\n\r\n    function withdrawAll() external override returns (uint256 amountWithdrawn) {\r\n        if (balance > 0) {\r\n            amountWithdrawn = balance;\r\n            ERC20(_depositToken).transfer(msg.sender, amountWithdrawn);\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\FVO_MMILLLER\\Desktop\\elvolution\\Testers\\contracts\\test\\MockStrategy.sol",
  "ast": {
    "absolutePath": "project:/contracts/test/MockStrategy.sol",
    "exportedSymbols": {
      "Batch": [
        22277
      ],
      "Context": [
        4494
      ],
      "ERC20": [
        3757
      ],
      "EnumerableSet": [
        5405
      ],
      "EnumerableSetExtension": [
        17493
      ],
      "Exchange": [
        18733
      ],
      "IERC20": [
        3835
      ],
      "IERC20Metadata": [
        3860
      ],
      "IStrategy": [
        20909
      ],
      "IUniswapV2Router01": [
        6018
      ],
      "IUniswapV2Router02": [
        6106
      ],
      "IUsdOracle": [
        20922
      ],
      "MockStrategy": [
        26098
      ],
      "Moderator": [
        22356
      ],
      "Ownable": [
        3131
      ],
      "ReceiptNFT": [
        22753
      ],
      "SafeMath": [
        4806
      ],
      "SharesToken": [
        22848
      ],
      "StrategyRouter": [
        24656
      ],
      "StrategyRouterLib": [
        25706
      ],
      "console": [
        14170
      ]
    },
    "id": 26099,
    "license": "Unlicens",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25974,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:73"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 25975,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26099,
        "sourceUnit": 4807,
        "src": "64:57:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 25976,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26099,
        "sourceUnit": 3758,
        "src": "123:55:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IStrategy.sol",
        "file": "../interfaces/IStrategy.sol",
        "id": 25977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26099,
        "sourceUnit": 20910,
        "src": "180:37:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 25978,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26099,
        "sourceUnit": 3132,
        "src": "219:52:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "hardhat/console.sol",
        "file": "hardhat/console.sol",
        "id": 25979,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 26099,
        "sourceUnit": 14171,
        "src": "273:29:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25980,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3131,
              "src": "331:7:73"
            },
            "id": 25981,
            "nodeType": "InheritanceSpecifier",
            "src": "331:7:73"
          },
          {
            "baseName": {
              "id": 25982,
              "name": "IStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20909,
              "src": "340:9:73"
            },
            "id": 25983,
            "nodeType": "InheritanceSpecifier",
            "src": "340:9:73"
          }
        ],
        "canonicalName": "MockStrategy",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 26098,
        "linearizedBaseContracts": [
          26098,
          20909,
          3131,
          4494
        ],
        "name": "MockStrategy",
        "nameLocation": "315:12:73",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 25985,
            "mutability": "mutable",
            "name": "_depositToken",
            "nameLocation": "373:13:73",
            "nodeType": "VariableDeclaration",
            "scope": 26098,
            "src": "357:29:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25984,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "357:7:73",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25987,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "409:7:73",
            "nodeType": "VariableDeclaration",
            "scope": 26098,
            "src": "393:23:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25986,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "393:7:73",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25989,
            "mutability": "mutable",
            "name": "mockProfitPercent",
            "nameLocation": "439:17:73",
            "nodeType": "VariableDeclaration",
            "scope": 26098,
            "src": "423:33:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25988,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "423:7:73",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 26004,
              "nodeType": "Block",
              "src": "528:97:73",
              "statements": [
                {
                  "expression": {
                    "id": 25998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25996,
                      "name": "_depositToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25985,
                      "src": "539:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25997,
                      "name": "depositToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25991,
                      "src": "555:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "539:29:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 25999,
                  "nodeType": "ExpressionStatement",
                  "src": "539:29:73"
                },
                {
                  "expression": {
                    "id": 26002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26000,
                      "name": "mockProfitPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25989,
                      "src": "579:17:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26001,
                      "name": "_mockProfitPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25993,
                      "src": "599:18:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "579:38:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26003,
                  "nodeType": "ExpressionStatement",
                  "src": "579:38:73"
                }
              ]
            },
            "id": 26005,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25991,
                  "mutability": "mutable",
                  "name": "depositToken_",
                  "nameLocation": "485:13:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 26005,
                  "src": "477:21:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25993,
                  "mutability": "mutable",
                  "name": "_mockProfitPercent",
                  "nameLocation": "508:18:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 26005,
                  "src": "500:26:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:51:73"
            },
            "returnParameters": {
              "id": 25995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:73"
            },
            "scope": 26098,
            "src": "465:160:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20878
            ],
            "body": {
              "id": 26013,
              "nodeType": "Block",
              "src": "698:39:73",
              "statements": [
                {
                  "expression": {
                    "id": 26011,
                    "name": "_depositToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25985,
                    "src": "716:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 26010,
                  "id": 26012,
                  "nodeType": "Return",
                  "src": "709:20:73"
                }
              ]
            },
            "functionSelector": "c89039c5",
            "id": 26014,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToken",
            "nameLocation": "642:12:73",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26007,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "671:8:73"
            },
            "parameters": {
              "id": 26006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "654:2:73"
            },
            "returnParameters": {
              "id": 26010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26014,
                  "src": "689:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "688:9:73"
            },
            "scope": 26098,
            "src": "633:104:73",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20884
            ],
            "body": {
              "id": 26024,
              "nodeType": "Block",
              "src": "796:140:73",
              "statements": [
                {
                  "expression": {
                    "id": 26022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26020,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25987,
                      "src": "911:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 26021,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26016,
                      "src": "922:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "911:17:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26023,
                  "nodeType": "ExpressionStatement",
                  "src": "911:17:73"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 26025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "754:7:73",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26018,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "787:8:73"
            },
            "parameters": {
              "id": 26017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26016,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "770:6:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 26025,
                  "src": "762:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:16:73"
            },
            "returnParameters": {
              "id": 26019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:0:73"
            },
            "scope": 26098,
            "src": "745:191:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20892
            ],
            "body": {
              "id": 26048,
              "nodeType": "Block",
              "src": "1062:120:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26037,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1103:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 26038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1103:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26039,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26027,
                        "src": "1115:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 26034,
                            "name": "_depositToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25985,
                            "src": "1079:13:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26033,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3757,
                          "src": "1073:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3757_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 26035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1073:20:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3757",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 26036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3295,
                      "src": "1073:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 26040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:49:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26041,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:49:73"
                },
                {
                  "expression": {
                    "id": 26044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26042,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25987,
                      "src": "1133:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 26043,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26027,
                      "src": "1144:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1133:17:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26045,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:17:73"
                },
                {
                  "expression": {
                    "id": 26046,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26027,
                    "src": "1168:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 26032,
                  "id": 26047,
                  "nodeType": "Return",
                  "src": "1161:13:73"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 26049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "953:8:73",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26029,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1005:8:73"
            },
            "parameters": {
              "id": 26028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26027,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "970:6:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 26049,
                  "src": "962:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "961:16:73"
            },
            "returnParameters": {
              "id": 26032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26031,
                  "mutability": "mutable",
                  "name": "amountWithdrawn",
                  "nameLocation": "1040:15:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 26049,
                  "src": "1032:23:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:25:73"
            },
            "scope": 26098,
            "src": "944:238:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20896
            ],
            "body": {
              "id": 26062,
              "nodeType": "Block",
              "src": "1228:68:73",
              "statements": [
                {
                  "expression": {
                    "id": 26060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26053,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25987,
                      "src": "1241:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 26056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 26054,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25987,
                              "src": "1252:7:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 26055,
                              "name": "mockProfitPercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25989,
                              "src": "1262:17:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1252:27:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 26057,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1251:29:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "3130303030",
                        "id": 26058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1283:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      "src": "1251:37:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1241:47:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26061,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:47:73"
                }
              ]
            },
            "functionSelector": "f69e2046",
            "id": 26063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compound",
            "nameLocation": "1199:8:73",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26051,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1219:8:73"
            },
            "parameters": {
              "id": 26050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1207:2:73"
            },
            "returnParameters": {
              "id": 26052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1228:0:73"
            },
            "scope": 26098,
            "src": "1190:106:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20902
            ],
            "body": {
              "id": 26071,
              "nodeType": "Block",
              "src": "1368:33:73",
              "statements": [
                {
                  "expression": {
                    "id": 26069,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25987,
                    "src": "1386:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 26068,
                  "id": 26070,
                  "nodeType": "Return",
                  "src": "1379:14:73"
                }
              ]
            },
            "functionSelector": "7e1c0c09",
            "id": 26072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalTokens",
            "nameLocation": "1313:11:73",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26065,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1341:8:73"
            },
            "parameters": {
              "id": 26064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1324:2:73"
            },
            "returnParameters": {
              "id": 26068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26072,
                  "src": "1359:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:9:73"
            },
            "scope": 26098,
            "src": "1304:97:73",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20908
            ],
            "body": {
              "id": 26096,
              "nodeType": "Block",
              "src": "1484:160:73",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26078,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25987,
                      "src": "1499:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 26079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1509:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1499:11:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26095,
                  "nodeType": "IfStatement",
                  "src": "1495:142:73",
                  "trueBody": {
                    "id": 26094,
                    "nodeType": "Block",
                    "src": "1512:125:73",
                    "statements": [
                      {
                        "expression": {
                          "id": 26083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 26081,
                            "name": "amountWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26076,
                            "src": "1527:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 26082,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25987,
                            "src": "1545:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1527:25:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26084,
                        "nodeType": "ExpressionStatement",
                        "src": "1527:25:73"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 26089,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1597:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 26090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1597:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 26091,
                              "name": "amountWithdrawn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26076,
                              "src": "1609:15:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 26086,
                                  "name": "_depositToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25985,
                                  "src": "1573:13:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 26085,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3757,
                                "src": "1567:5:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3757_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 26087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1567:20:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3757",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 26088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3295,
                            "src": "1567:29:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 26092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1567:58:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 26093,
                        "nodeType": "ExpressionStatement",
                        "src": "1567:58:73"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "853828b6",
            "id": 26097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawAll",
            "nameLocation": "1418:11:73",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26074,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1441:8:73"
            },
            "parameters": {
              "id": 26073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:2:73"
            },
            "returnParameters": {
              "id": 26077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26076,
                  "mutability": "mutable",
                  "name": "amountWithdrawn",
                  "nameLocation": "1467:15:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 26097,
                  "src": "1459:23:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:25:73"
            },
            "scope": 26098,
            "src": "1409:235:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 26099,
        "src": "306:1341:73",
        "usedErrors": [
          20828,
          20830,
          20832,
          20834,
          20836,
          20838,
          20840,
          20842,
          20844,
          20846,
          20848,
          20850,
          20852
        ]
      }
    ],
    "src": "37:1612:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-09-08T16:23:09.764Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "details": "Max withdrawable amount is returned by totalTokens."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AllocateToStrategies(uint256,uint256)": {
        "notice": "Fires when batch is deposited into strategies."
      },
      "Deposit(address,address,uint256)": {
        "notice": "Fires when user deposits in batch."
      },
      "RedeemReceiptsToShares(address,uint256,uint256[])": {
        "notice": "Fires when user converts his receipt into shares token."
      },
      "RedeemReceiptsToSharesByModerators(address,uint256[])": {
        "notice": "Fires when moderator converts foreign receipts into shares token."
      },
      "WithdrawFromBatch(address,address,uint256)": {
        "notice": "Fires when user withdraw from batch."
      },
      "WithdrawFromStrategies(address,address,uint256)": {
        "notice": "Fires when user withdraw from strategies."
      }
    },
    "kind": "user",
    "methods": {
      "compound()": {
        "notice": "Harvest rewards and reinvest them."
      },
      "deposit(uint256)": {
        "notice": "Deposit token to strategy."
      },
      "depositToken()": {
        "notice": "Token used to deposit to strategy."
      },
      "totalTokens()": {
        "notice": "Approximated amount of token on the strategy."
      },
      "withdraw(uint256)": {
        "notice": "Withdraw tokens from strategy."
      },
      "withdrawAll()": {
        "notice": "Withdraw all tokens from strategy."
      }
    },
    "version": 1
  }
}